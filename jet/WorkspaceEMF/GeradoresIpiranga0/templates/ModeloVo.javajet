<%@ jet package="compiledtemplates" 
imports="java.util.* util.wrappers.* org.eclipse.emf.ecore.* org.eclipse.emf.codegen.util.*" 
class="ModeloVo" %>
<%
EClass eClass = (EClass) argument;
ClassWrapper classe = new ClassWrapper();
classe.setClasse(eClass);
AttributeWrapper atributo = new AttributeWrapper();
ReferenceWrapper referencia = null;
%>
package <%= classe.getPacoteModeloVo() %>;

import java.util.List;
import <%= classe.getPacoteReferencias() %>.ObjetoI;
import <%= classe.getPacoteModeloI() %>.*;
import <%= classe.getPacoteUtil() %>.MetodoNaoImplementadoException;
<%= (classe.existeTipoData()?"import java.util.Date;":"") %>
<% if (classe.possuiAtributos()) { %>
import <%= classe.getPacoteDerivadaI() %>.<%= classe.getNomeDerivadaI() %>;
import <%= classe.getPacoteDerivada() %>.<%= classe.getNomeDerivada() %>;
import <%= classe.getPacoteAssembledI() %>.<%= classe.getNomeAssembledI() %>;
import <%= classe.getPacoteAssembledVo() %>.<%= classe.getNomeAssembledVo() %>;
<% } %>

public class <%= classe.getNomeModeloVo() %> <% if (classe.getSuperTipo()!=null) {%> extends <%= classe.getSuperTipo().getNomeModeloVo() %> <% } %> implements <%= classe.getNomeModeloI() %> {

<% if (classe.possuiAtributos()) { %>

	private <%= classe.getNomeDerivadaI() %> itemDerivada = null;
	private <%= classe.getNomeDerivadaI() %> getItemDerivada() {
		if (itemDerivada==null) itemDerivada = new <%= classe.getNomeDerivada() %>(this);
		return itemDerivada;
	}

	public boolean comparaItem(ObjetoI comparador) {
		<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %> = (<%= classe.getNomeModeloI() %>) comparador;
		throw new MetodoNaoImplementadoException("<%= classe.getNomeModeloVo() %>","comparaItem(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>)");
	}


<%for (EAttribute item : eClass.getEAttributes()) {%>
<% 	atributo.setAtributo(item);%>
    private <%= atributo.getTipo() %> <%= item.getName() %>;
<%}%>
	private <%= classe.getNomeAssembledI() %> objetoAssembled = null;
	
	public <%= classe.getNomeModeloVo() %>() {
		objetoAssembled = new <%= classe.getNomeAssembledVo() %>(this);
	}
	
<%for (EAttribute item : eClass.getEAttributes()) {%>
<% 	atributo.setAtributo(item);%>
    public <%= atributo.getTipo() %> <%= atributo.getGetter() %>() {
    	return this.<%= item.getName() %>;
    }
    public void <%= atributo.getSetter() %>(<%= atributo.getTipo() %> <%= item.getName() %>) {
    	this.<%= item.getName() %> = <%= item.getName() %>;
    }
<%}%>

<%
Iterator iterador = classe.getReferenceWrappersUnico().iterator();
while (iterador.hasNext()) {
	referencia = (ReferenceWrapper) iterador.next();
%>
    public <%= referencia.getClasseOposta().getNomeModeloI() %> <%= referencia.getGetter() %>() {
    	return objetoAssembled.<%= referencia.getGetter() %>();
    }
    public void <%= referencia.getSetter() %>(<%= referencia.getClasseOposta().getNomeModeloI() %> item){
    	objetoAssembled.<%= referencia.getSetter() %>(item);
    }
<%}%>

<%
iterador = classe.getReferenceWrappersMultiplo().iterator();
while (iterador.hasNext()) {
	referencia = (ReferenceWrapper) iterador.next();
%>
    public List <%= referencia.getGetterMultiplo() %>() {
    	return objetoAssembled.<%= referencia.getGetterMultiplo() %>();
    }
    public void <%= referencia.getSetterMultiplo() %>(List item){
    	objetoAssembled.<%= referencia.getSetterMultiplo() %>(item);
    }
<%}%>

<%} // Final de possuiAtributos %>
} 
