<%@ jet package="compiledtemplates" 
imports="java.util.* util.wrappers.* org.eclipse.emf.ecore.* org.eclipse.emf.codegen.util.*" 
class="ActionAtualizar" %>
<%
%>
<%EClass eClass = (EClass) argument;
ClassWrapper classe = new ClassWrapper();
classe.setClasse(eClass);
ReferenceWrapper referencia = null;

%>
package <%= classe.getPacoteActionAtualizar() %>;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import <%= classe.getPacoteActionComum() %>.EditarAction;
import <%= classe.getPacoteServiceI() %>.<%= classe.getNomeServiceI() %>;
import <%= classe.getPacoteServiceI() %>.ServiceLocator;
import ipiranga.pdsi.framework.modelo.negocio.service.ServiceException;
import <%= classe.getPacoteFormBean() %>.<%= classe.getNomeFormBean() %>;
import <%= classe.getPacoteModeloI() %>.<%= classe.getNomeModeloI() %>;
import <%= classe.getPacoteModeloVo() %>.<%= classe.getNomeModeloVo() %>;

<%= "/*" %>
<%= "* Classe gerada automaticamente, nao realizar alteracoes " %>
<%= "*/" %>
public abstract class <%= classe.getNomeActionAtualizar() %> extends EditarAction{
	
	protected abstract <%= classe.getNomeModeloI() %> preparaInsercao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>, <%= classe.getNomeFormBean() %> formBean, HttpServletRequest request, ActionErrors erros) throws ServiceException;
	protected abstract <%= classe.getNomeModeloI() %> preparaAlteracao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>, <%= classe.getNomeFormBean() %> formBean, HttpServletRequest request, ActionErrors erros) throws ServiceException;
	protected abstract ActionErrors executaInsercao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>, <%= classe.getNomeServiceI() %> servico, <%= classe.getNomeFormBean() %> formBean, HttpServletRequest request, ActionErrors erros) throws ServiceException;
	protected abstract ActionErrors executaAlteracao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>, <%= classe.getNomeServiceI() %> servico, <%= classe.getNomeFormBean() %> formBean, HttpServletRequest request, ActionErrors erros) throws ServiceException;

	public ActionForward execute(ActionMapping mapping, 
			 ActionForm form, 
			 HttpServletRequest request, 
			 HttpServletResponse response) throws Exception {

		ActionErrors erros = new ActionErrors();
		ActionForward forward = new ActionForward();

		try {
			HttpSession session = request.getSession(true);
			String tipoOperacao = (String) session.getAttribute(CHAVE_TIPO_OPERACAO);
			<%= classe.getNomeFormBean() %> formBean = (<%= classe.getNomeFormBean() %>) form;
			
			<%= classe.getNomeServiceI() %> servico = ServiceLocator.get<%= classe.getNomeServiceI() %>();	
			if (tipoOperacao.compareTo(OPERACAO_ALTERACAO)==0) {
				<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %> = new <%= classe.getNomeModeloVo() %>();
				<%= classe.getNomeVariavel() %> = preparaAlteracao(<%= classe.getNomeVariavel() %>, formBean, request, erros);
				erros = executaAlteracao(<%= classe.getNomeVariavel() %>, servico, formBean, request, erros);
			} else {
				<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %> = new <%= classe.getNomeModeloVo() %>();
				<%= classe.getNomeVariavel() %> = preparaInsercao(<%= classe.getNomeVariavel() %>, formBean, request, erros);
				erros = executaInsercao(<%= classe.getNomeVariavel() %>, servico, formBean, request, erros);
			}

		} catch (Exception e) {

			// Report the error using the appropriate name and ID.
			e.printStackTrace();
			erros.add("name", new ActionError("id"));

		}

		// If a message is required, save the specified key(s)
		// into the request for use by the <struts:errors> tag.

		if (!erros.isEmpty()) {
			saveErrors(request, erros);

			// Forward control to the appropriate 'failure' URI (change name as desired)
			forward = mapping.findForward("erro");

		} else {

			// Forward control to the appropriate 'success' URI (change name as desired)
			forward = mapping.findForward("sucesso");

		}

		// Finish with
		return (forward);

	}

}
