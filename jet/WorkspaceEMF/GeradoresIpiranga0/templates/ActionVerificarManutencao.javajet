<%@ jet package="compiledtemplates" 
imports="java.util.* util.wrappers.* org.eclipse.emf.ecore.* org.eclipse.emf.codegen.util.*" 
class="ActionVerificarManutencao" %>
<%
%>
<%EClass eClass = (EClass) argument;
ClassWrapper classe = new ClassWrapper();
classe.setClasse(eClass);
ReferenceWrapper referencia = null;

%>
package <%= classe.getPacoteActionVerificarManutencao() %>;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import <%= classe.getPacoteActionComum() %>.EditarAction;
import <%= classe.getPacoteModeloI() %>.<%= classe.getNomeModeloI() %>;
import <%= classe.getPacoteModeloVo() %>.<%= classe.getNomeModeloVo() %>;
import <%= classe.getPacoteServiceI() %>.<%= classe.getNomeServiceI() %>;
import <%= classe.getPacoteServiceI() %>.ServiceLocator;
import <%= classe.getPacoteFormBean() %>.<%= classe.getNomeFormBean() %>;

<%= "/*" %>
<%= "* Classe gerada automaticamente, nao realizar alteracoes " %>
<%= "*/" %>
public abstract class <%= classe.getNomeActionVerificarManutencao() %> extends EditarAction {

	public abstract <%= classe.getNomeModeloI() %> pesquisa<%= classe.getNomeSimples() %>(<%= classe.getNomeServiceI() %> servico, HttpServletRequest request, HttpServletResponse response,ActionErrors errors);
	public abstract <%= classe.getNomeModeloI() %> preparaInclusao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>,<%= classe.getNomeFormBean() %> formBean,  HttpServletRequest request, HttpServletResponse response,ActionErrors errors);
	public abstract <%= classe.getNomeModeloI() %> preparaAlteracao(<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %>, <%= classe.getNomeFormBean() %> formBean ,  HttpServletRequest request, HttpServletResponse response,ActionErrors errors);
	
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response)
    throws Exception {
    
		ActionErrors errors = new ActionErrors();
		ActionForward forward = new ActionForward();
		boolean inclusao = false;
		
		try {
			HttpSession session = request.getSession(true);
			<%= classe.getNomeFormBean() %> formBean = (<%= classe.getNomeFormBean() %>) form;
 			<%= classe.getNomeServiceI() %> servico = ServiceLocator.get<%= classe.getNomeServiceI() %>();
			<%= classe.getNomeModeloI() %> <%= classe.getNomeVariavel() %> = pesquisa<%= classe.getNomeSimples() %>(servico, request, response, errors);
			if (errors.isEmpty()) {
				if (<%= classe.getNomeVariavel() %>==null) {
					inclusao = true;
					session.setAttribute(CHAVE_TIPO_OPERACAO,OPERACAO_INCLUSAO);
					<%= classe.getNomeVariavel() %> = new <%= classe.getNomeModeloVo() %>();
					preparaInclusao(<%= classe.getNomeVariavel() %>,formBean, request, response,errors);
				} else {
					session.setAttribute(CHAVE_TIPO_OPERACAO,OPERACAO_ALTERACAO);
					preparaAlteracao(<%= classe.getNomeVariavel() %>, formBean , request, response,errors);
				}
			} 
		} catch (Exception e) {

		    // Report the error using the appropriate name and ID.
			e.printStackTrace();
		    errors.add("name", new ActionError("id"));

		}

		// If a message is required, save the specified key(s)
		// into the request for use by the <struts:errors> tag.

		if (!errors.isEmpty()) {
	    	saveErrors(request, errors);

		    // Forward control to the appropriate 'failure' URI (change name as desired)
		    forward = mapping.findForward("erro");

		} else {

		    // Forward control to the appropriate 'success' URI (change name as desired)
		    if (inclusao){
		    	forward = mapping.findForward("sucessoInclusao");
		    } else {
		    	forward = mapping.findForward("sucessoAlteracao");
		    }
			

		}

		// Finish with
		return (forward);

	}
} 

