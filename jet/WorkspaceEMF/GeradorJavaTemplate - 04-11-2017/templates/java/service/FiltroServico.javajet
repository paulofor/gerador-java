<%@ jet package="jet.java.servico" 
imports="java.util.* gerapp.app.* jet.wrappers.base.* jet.wrappers.java.* gerapp.modelo.* " 
class="FiltroServico" %>
<%
Recursos recursos = (Recursos) argument;  
ClasseWrapper classe = recursos.getClasse();
Configuracao conf = recursos.getConfiguracao();
%>

package <%= conf.getNamespace() %>.regracolecao.filtro;

import java.util.List;
import <%= conf.getNamespace() %>.modelo.*;
import javax.swing.JTextArea;



public class <%= classe.getNomeParaClasse() %>Filtro {

		private JTextArea texto = null;
		public void setTextArea(JTextArea dado) {
			texto = dado;
		}
		public JTextArea getTextArea() {
			return texto;
		}

<%
		Iterator<RelacionamentoWrapper> it1 = classe.obtemListaComChaveEstrangeira().iterator();
		while (it1.hasNext()) {
		RelacionamentoWrapper relac = it1.next();
		ClasseWrapper classeOposta = relac.getClasseOposta();
		%>
      	private long _codigo_id<%= classeOposta.getNomeParaClasse() %><%= relac.getNomeRelacionamento() %> = -1;
		public long getCodigo<%= classeOposta.getNomeParaClasse() %><%= relac.getNomeRelacionamento() %>() {
			return _codigo_id<%= classeOposta.getNomeParaClasse() %><%= relac.getNomeRelacionamento() %>;
		}
		public void setCodigo<%= classeOposta.getNomeParaClasse() %><%= relac.getNomeRelacionamento() %>(long dado) {
			_codigo_id<%= classeOposta.getNomeParaClasse() %><%= relac.getNomeRelacionamento() %> = dado;
		}
      	<%
		}
		%>

<%
		Iterator<FiltroColecao> iteradorF = classe.getListaFiltroColecao().iterator();
		while (iteradorF.hasNext()) {
		FiltroColecao filtro = iteradorF.next();
		String tipoFiltro = null;
		if (filtro.getIdEntidadeT()==0) {
			// Nao tem entidade é tipo primitivo
			tipoFiltro =  ConverteTipoJava.getTipoFiltro(filtro.getTipoCampoFiltro());
		}	
		else { 
			// Tem entidade vai buscar a classe
			ClasseWrapper classeFiltro = AplicacaoWrapper.getPorId(filtro.getIdEntidadeT());
			if (classeFiltro==null) break;
			tipoFiltro = classeFiltro.getNomeParaClasse();
		}
%>
		private <%= tipoFiltro %> _<%= filtro.getNomeCampoFiltro() %>;
		public <%= tipoFiltro %> get<%= filtro.getNomeCampoFiltro() %> () {
			return _<%= filtro.getNomeCampoFiltro() %> ;
		}
		public void set<%= filtro.getNomeCampoFiltro() %> (<%= tipoFiltro %> value) {
			_<%= filtro.getNomeCampoFiltro() %>  = value;
		}
		
		public <%= tipoFiltro %> valida<%= filtro.getNomeCampoFiltro() %>() {
			<% if ("long".equals(tipoFiltro) || "float".equals(tipoFiltro)) { %>
			if (_<%= filtro.getNomeCampoFiltro() %> == 0) {
				throw new RuntimeException("<%= filtro.getNomeCampoFiltro() %> eh zero");
			}
			<% } else { %>
			if (_<%= filtro.getNomeCampoFiltro() %> == null) {
				throw new RuntimeException("<%= filtro.getNomeCampoFiltro() %> eh nulo");
			}
			<% } %>
			return get<%= filtro.getNomeCampoFiltro() %> ();
		}
		
<%
		}
%>


<%
		Iterator<FiltroColecao> iterador = classe.getListaFiltroColecao().iterator();
		while (iterador.hasNext()) {
		FiltroColecao filtro = iterador.next();
		if (filtro.getIdEntidadeT()==0) {
%>
		//public <%= ConverteTipoJava.getTipoFiltro(filtro.getTipoCampoFiltro()) %> <%= filtro.getNomeCampoFiltro() %>;
<%
		}
		}
%>

		
}