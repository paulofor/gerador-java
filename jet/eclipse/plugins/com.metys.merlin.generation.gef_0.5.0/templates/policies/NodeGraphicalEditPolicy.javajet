<%
/**
 * Copyright (c) 2005 Joel Cheuoua & Contributors
 * 
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Merlin project nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
%>
<%@ jet package="com.metys.merlin.generation.gef.compiledtemplates.policies" imports="com.metys.merlin.generation.gef.genmodel.* com.metys.merlin.generation.gef.genmodel.util.* org.eclipse.emf.ecore.* org.eclipse.emf.codegen.ecore.genmodel.*" class="NodeGraphicalEditPolicy" %>
<%GenNodeEditPart genEditPart = (GenNodeEditPart) argument; EClass ecoreClass = genEditPart.getEcoreClass(); EPackage ecorePackage = (EPackage) ecoreClass.getEPackage(); GenModel genModel = genEditPart.getGenGEFModel().getGenModel(); GenClass genClass = GenModelHelper.getGenClass(genModel, ecoreClass);%>
<%@ include file="../Header.jetinc"%>
package <%=genEditPart.getPackageName()%>.policies;

<%genModel.markImportLocation(stringBuffer);%>

/**
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public <%if (ecoreClass.isAbstract()) {%>abstract <%}%>class <%=ecoreClass.getName()%>GraphicalEditPolicy<%=GenModelHelper.getGraphicalEditPolicyExtendsLitteral(genModel, genEditPart)%> {
  
  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private <%=genModel.getImportedName("org.eclipse.swt.graphics.Color")%> revertColor;
	
	/**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
	private static Color highLightColor = new Color(null, 200, 200, 240);

	/**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
	public void eraseTargetFeedback(<%=genModel.getImportedName("org.eclipse.gef.Request")%> request) {
		if (revertColor != null) {
			getHostFigure().setBackgroundColor(revertColor);
			revertColor = null;
		}
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
	public <%=genModel.getImportedName("org.eclipse.gef.EditPart")%> getTargetEditPart(Request request) {
		return request.getType().equals(<%=genModel.getImportedName("org.eclipse.gef.RequestConstants")%>.REQ_SELECTION_HOVER) ? getHost() : null;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
	public void showTargetFeedback(Request request) {
		if (request.getType().equals(RequestConstants.REQ_CREATE)
			|| request.getType().equals(RequestConstants.REQ_ADD))
			showHighlight();
	}
	
	/**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
	protected void showHighlight() {
		if (revertColor == null) {
			revertColor = getHostFigure().getBackgroundColor();
			getHostFigure().setBackgroundColor(highLightColor);
		}
	}
}
<%genModel.emitSortedImports();%>