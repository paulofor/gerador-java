<%
/**
 * Copyright (c) 2005 Joel Cheuoua & Contributors
 * 
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Merlin project nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
%>
<%@ jet package="com.metys.merlin.generation.gef.compiledtemplates.plugin" imports="com.metys.merlin.generation.gef.genmodel.* java.util.* org.eclipse.emf.codegen.ecore.genmodel.*" class="PluginXML" %>
<%
%>
<%GenGEFModel genGEFModel = (GenGEFModel) argument; GenModel genModel= genGEFModel.getGenModel();%>
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

<plugin
    name = "%pluginName"
    id = "<%=genGEFModel.getPluginID()%>"
    version = "1.0.0"
    provider-name = "%providerName"
    class = "<%=genGEFModel.getPluginClass()%>">

  <requires>
  	<import plugin="<%=genModel.getModelPluginID()%>"/>
  	<import plugin="<%=genModel.getEditPluginID()%>"/>
    <import plugin="org.eclipse.draw2d"/>
    <import plugin="org.eclipse.gef"/>
    <import plugin="org.eclipse.swt"/>
    <import plugin="org.eclipse.emf.ecore"/>
    <import plugin="org.eclipse.emf.ecore.edit"/>
    <import plugin="org.eclipse.jface"/>
    <import plugin="org.eclipse.ui"/>
    <import plugin="org.eclipse.ui.ide"/>
    <import plugin="org.eclipse.ui.views"/>
    <import plugin="org.eclipse.core.runtime"/>
    <import plugin="org.eclipse.core.resources"/>
    <import plugin="com.metys.merlin.generation.gef"/>    
  </requires>

  <runtime>
    <library name="<%=genModel.getModelPluginID()%>gef.jar">
      <export name="*"/>
    </library>
  </runtime>
  <extension point="org.eclipse.ui.editors">
  	<% for (Iterator i = genGEFModel.getGenEditors().iterator(); i.hasNext(); ) { GenEditor genEditor = (GenEditor)i.next();%>
     <editor
        id = "<%=genEditor.getPackageName()%>.<%=genEditor.getName()%>ID"
        name = "%_UI_<%=genEditor.getName()%>_label"
        icon = "icons/full/obj16/<%=genEditor.getName()%>.gif"
        extensions = "<%=genEditor.getName().replaceFirst("Editor","").toLowerCase()%>, <%=genEditor.getName().replaceFirst("Editor","").toLowerCase()%>.gef"
        class = "<%=genEditor.getPackageName()%>.<%=genEditor.getName()%>"
        contributorClass="<%=genEditor.getPackageName()%>.<%=genEditor.getName()%>ActionBarContributor"/>
    <%}%>
  </extension>
</plugin>