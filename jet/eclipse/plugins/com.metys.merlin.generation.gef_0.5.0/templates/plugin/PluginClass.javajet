<%
/**
 * Copyright (c) 2005 Joel Cheuoua & Contributors
 * 
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Merlin project nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
%>
<%@ jet package="com.metys.merlin.generation.gef.compiledtemplates.plugin" imports="com.metys.merlin.generation.gef.genmodel.* com.metys.merlin.generation.gef.genmodel.util.GenModelHelper org.eclipse.emf.codegen.ecore.genmodel.*" class="PluginClass" %>
<%GenGEFModel genGEFModel = (GenGEFModel) argument; GenModel genModel= genGEFModel.getGenModel();String packageName = GenModelHelper.containerQName(genGEFModel.getPluginClass()); String className = GenModelHelper.shortName(genGEFModel.getPluginClass()); %>

<%@ include file="../Header.jetinc"%>
<% if (genModel.getModelPluginID() != null) {%>
package <%=packageName%>;
<%}%>

import org.eclipse.ui.plugin.AbstractUIPlugin;

import java.net.MalformedURLException;
import java.net.URL;

<%genModel.markImportLocation(stringBuffer);%>

/**
 * GEF Plugin class.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class <%=className%> extends AbstractUIPlugin {
	
	private static <%=className%> plugin;
	
	/**
	 * Returns the singleton instance of the Eclipse plugin.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @return the singleton instance.
	 * @generated
	 */
  public static <%=className%> getPlugin() {
		return plugin;
	}
	
	/**
	 * Creates a new <%=genModel.getModelName()%>Plugin
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public <%=className%>() {
		super();
		plugin = this;
	}
	
	/**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */	
  public URL getResource(String resourcePath) {
    try {
		  URL url = new URL(getBundle().getEntry("/") + resourcePath);
		  return url;
		} catch (MalformedURLException e) {		
		}
		return null;
  }
}
<%genModel.emitSortedImports();%>